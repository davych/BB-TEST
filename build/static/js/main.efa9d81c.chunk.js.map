{"version":3,"sources":["theme.js","modules/Home/redux/action.js","modules/Episode/EpisodeListItem/styles.js","modules/Episode/EpisodeListItem/index.js","modules/Episode/EpisodeList/index.js","components/CardPanel/styles.js","components/CardPanel/index.js","modules/Home/Detail.js","modules/Home/router.js","modules/Episode/redux/action.js","modules/Episode/Detail.js","modules/Episode/router.js","router.js","common/request.js","modules/Home/redux/reducer.js","modules/Episode/redux/reducer.js","redux/reducers.js","modules/Home/services.js","modules/Home/redux/saga.js","modules/Episode/services.js","modules/Episode/redux/saga.js","redux/sagas.js","redux/index.js","index.js"],"names":["responsiveFontSizes","createMuiTheme","makeStyles","theme","link","textDecoration","root","width","display","margin","spacing","backgroundColor","details","flex","flexDirection","content","padding","cover","backgroundSize","backgroundPosition","title","ellipsisMulti","minHeight","overflow","withWidth","props","classes","useStyles","Link","className","to","data","id","Card","CardMedia","image","isWidthUp","original","medium","CardContent","Typography","component","variant","noWrap","name","color","dangerouslySetInnerHTML","__html","summary","List","episodes","map","episode","breakpoints","up","position","top","media","height","CardActionArea","gutterBottom","actions","CardActions","connect","state","TVShow","dispatch","getTVShow","type","action","useParams","history","useHistory","Actions","useMemo","IconButton","onClick","push","parseInt","disabled","fontSize","useEffect","Grid","container","item","sm","xs","lodash","get","Home","exact","path","Episode","getEpisode","Eposide","App","from","request","options","this","HTTPService","axios","create","baseURL","process","timeout","interceptors","use","requestSuccess","requestFail","response","responseSuccess","responseFail","config","a","error","Promise","reject","requestStatus","status","isloading","errMsg","store","payload","combineReducers","params","embed","watchTVShow","put","call","homeServices","res","message","takeEvery","watchEpisode","episodeServices","rootSaga","all","sagaMiddleware","createSagaMiddleware","middlewares","createStore","rootReducer","applyMiddleware","run","rootSagas","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.efa9d81c.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nexport default responsiveFontSizes(createMuiTheme());\n","export default {\n  get: 'TVSHOW_GET',\n  set: 'TVSHOW_SET',\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: 'none',\n  },\n  root: {\n    width: '90%',\n    display: 'flex',\n    margin: `${theme.spacing(2)}px auto`,\n    '&:hover': {\n      backgroundColor: '#f0f0f0',\n    },\n  },\n  details: {\n    display: 'flex',\n    flex: 2,\n    flexDirection: 'column',\n  },\n  content: {\n    padding: '0 8px',\n  },\n  cover: {\n    flex: 1,\n    width: 150,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n  },\n  title: {\n    width: 200,\n  },\n  ellipsisMulti: {\n    minHeight: theme.spacing(4),\n    '& > *': {\n      overflow: 'hidden',\n      'text-overflow': 'ellipsis',\n      display: '-webkit-box',\n      '-webkit-line-clamp': 2,\n      '-webkit-box-orient': 'vertical',\n    },\n  },\n}));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport useStyles from './styles';\nimport Link from '@material-ui/core/Link';\n\nconst EpisodeListItem = (props) => {\n  const classes = useStyles();\n  return (\n    <Link className={classes.link} to={`/eposide/${props.data.id}`}>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.cover}\n          image={isWidthUp('sm', props.width) ? props.data?.image?.original : props.data?.image?.medium}\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.title} noWrap>\n              {props.data.name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <div className={classes.ellipsisMulti} dangerouslySetInnerHTML={{ __html: props.data?.summary }}></div>\n            </Typography>\n          </CardContent>\n        </div>\n      </Card>\n    </Link>\n  );\n};\n\nEpisodeListItem.propTypes = {\n  data: PropTypes.object,\n  width: PropTypes.any,\n};\n\nexport default withWidth()(EpisodeListItem);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport List from '@material-ui/core/List';\nimport EpisodeListItem from '../EpisodeListItem';\nconst EpisodeList = (props) => {\n  return (\n    <List>\n      {props.episodes.map((episode) => (\n        <EpisodeListItem key={episode.id} data={episode} />\n      ))}\n    </List>\n  );\n};\n\nEpisodeList.propTypes = {\n  // width: PropTypes.any,\n  episodes: PropTypes.array,\n};\n\nexport default withWidth()(EpisodeList);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      position: 'sticky',\n      top: 0,\n    },\n  },\n  media: {\n    backgroundSize: 'contain',\n    height: '50vh',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './styles.js';\n\nconst CardPanel = (props) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={isWidthUp('sm', props.width) ? props.data?.image?.original : props.data?.image?.medium}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.data?.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n            <div dangerouslySetInnerHTML={{ __html: props.data?.summary }}></div>\n          </Typography>\n        </CardContent>\n        {props.actions ? <CardActions>{props.actions}</CardActions> : null}\n      </CardActionArea>\n    </Card>\n  );\n};\n\nCardPanel.propTypes = {\n  width: PropTypes.any,\n  data: PropTypes.object,\n  actions: PropTypes.object,\n};\n\nexport default withWidth()(CardPanel);\n","import React, { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport action from './redux/action';\nimport lodash from 'lodash';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport EpisodeList from '@/modules/Episode/EpisodeList';\nimport CardPanel from '@/components/CardPanel';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\n\nconst Detail = (props) => {\n  const { id } = useParams();\n  const history = useHistory();\n  const Actions = useMemo(\n    () => (\n      <>\n        <IconButton onClick={() => history.push(`/${parseInt(id) - 1}`)} disabled={parseInt(id) === 1}>\n          <SkipPreviousIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton onClick={() => history.push(`/${parseInt(id) + 1}`)}>\n          <SkipNextIcon fontSize=\"large\" />\n        </IconButton>\n      </>\n    ),\n    [id],\n  );\n\n  useEffect(() => {\n    props.getTVShow(id);\n  }, [id]);\n\n  return (\n    <Grid container>\n      <Grid item sm={6}>\n        <CardPanel data={props.TVShow.data || {}} actions={Actions} />\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <EpisodeList episodes={lodash.get(props.TVShow, 'data._embedded.episodes', [])} />\n      </Grid>\n    </Grid>\n  );\n};\n\nDetail.propTypes = {\n  TVShow: PropTypes.object,\n  getTVShow: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  TVShow: state.TVShow,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTVShow: (id) =>\n    dispatch({\n      type: action.get,\n      id,\n    }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Detail from './Detail';\n\nexport default function Home() {\n  return (\n    <Switch>\n      <Route exact path=\"/:id\">\n        <Detail />\n      </Route>\n    </Switch>\n  );\n}\n","export default {\n  get: 'EPISODE_GET',\n  set: 'EPISODE_SET',\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport action from './redux/action';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CardPanel from '@/components/CardPanel';\n\nconst Detail = (props) => {\n  const { id } = useParams();\n\n  useEffect(() => {\n    props.getEpisode(id);\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item sm={6}>\n        <CardPanel data={props.Episode.data || {}} />\n      </Grid>\n    </Grid>\n  );\n};\n\nDetail.propTypes = {\n  Episode: PropTypes.object,\n  getEpisode: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  Episode: state.Episode,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEpisode: (id) =>\n    dispatch({\n      type: action.get,\n      id,\n    }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Detail from './Detail';\n\nexport default function Eposide() {\n  return (\n    <Switch>\n      <Route exact path=\"/eposide/:id\">\n        <Detail />\n      </Route>\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport Home from '@/modules/Home/router';\nimport Eposide from '@/modules/Episode/router';\n\nexport default function App() {\n  return (\n    <Router>\n      <Redirect from=\"/\" to=\"/1\" />\n      <Home />\n      <Eposide />\n    </Router>\n  );\n}\n","/**\n * desc\n * @fileoverview\n *  1. request can be used directly, the interceptors are defined in the Request class\n *  2. Request also can be used, but need to use new statement first.\n *    const request = new Request({ requestSuccess<function>, requestFail<function>,responseSuccess<function>,responseFail<function> })\n */\nimport axios from 'axios';\nclass Requestor {\n  constructor(options = {}) {\n    this.HTTPService = axios.create({\n      baseURL: process.env.REACT_APP_API_LINK || '/',\n      timeout: 10000,\n    });\n    this.HTTPService.interceptors.request.use(\n      options.requestSuccess || this.requestSuccess,\n      options.requestFail || this.requestFail,\n    );\n    this.HTTPService.interceptors.response.use(\n      options.responseSuccess || this.responseSuccess,\n      options.responseFail || this.responseFail,\n    );\n    return this.HTTPService;\n  }\n\n  async requestSuccess(config) {\n    return config;\n  }\n\n  requestFail(error) {\n    return Promise.reject(error);\n  }\n\n  responseSuccess(response) {\n    return response;\n  }\n\n  responseFail(error) {\n    return Promise.reject(error);\n  }\n}\nconst request = new Requestor();\nconst requestStatus = {\n  none: () => ({\n    status: 'none',\n    isloading: false,\n    error: '',\n  }),\n  fetching: () => ({\n    status: 'fetching',\n    isloading: true,\n    error: '',\n  }),\n  fulfilled: () => ({\n    status: 'success',\n    isloading: false,\n    error: '',\n  }),\n  fail: (errMsg) => ({\n    status: 'failure',\n    isloading: false,\n    error: errMsg,\n  }),\n};\n\nexport default request;\nexport { requestStatus };\n","import action from './action';\nimport { requestStatus } from '@/common';\nconst store = {\n  data: {},\n  ...requestStatus.none,\n};\n\nconst TVShow = (state = store, { type, payload }) => {\n  switch (type) {\n    case action.set:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default TVShow;\n","import action from './action';\nimport { requestStatus } from '@/common';\nconst store = {\n  data: {},\n  ...requestStatus.none,\n};\n\nconst Episode = (state = store, { type, payload }) => {\n  switch (type) {\n    case action.set:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default Episode;\n","import { combineReducers } from 'redux';\nimport TVShow from '@/modules/Home/redux/reducer';\nimport Episode from '@/modules/Episode/redux/reducer';\n\nexport default combineReducers({\n  TVShow,\n  Episode,\n});\n","import { request } from '@/common';\n\nconst getTVShow = (id) => request.get(`shows/${id}`, { params: { embed: 'episodes' } });\nexport default {\n  getTVShow,\n};\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport action from './action';\nimport homeServices from '../services';\nimport { requestStatus } from '@/common';\nexport function* getTVShow({ id }) {\n  try {\n    yield put({ type: action.set, payload: requestStatus.fetching() });\n    const res = yield call(homeServices.getTVShow, id);\n    yield put({ type: action.set, payload: { ...requestStatus.fulfilled(), data: res.data } });\n  } catch (error) {\n    yield put({ type: action.set, payload: requestStatus.fail(error.message) });\n  }\n}\n\nexport default function* watchTVShow() {\n  yield takeEvery(action.get, getTVShow);\n}\n","import { request } from '@/common';\n\nexport const getEpisode = (id) => request.get(`episodes/${id}`);\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport action from './action';\nimport * as episodeServices from '../services';\nimport { requestStatus } from '@/common';\nfunction* getEpisode({ id }) {\n  try {\n    yield put({ type: action.set, payload: requestStatus.fetching() });\n    const res = yield call(episodeServices.getEpisode, id);\n    yield put({ type: action.set, payload: { ...requestStatus.fulfilled(), data: res.data } });\n  } catch (error) {\n    yield put({ type: action.set, payload: requestStatus.fail(error.message) });\n  }\n}\n\nexport default function* watchEpisode() {\n  yield takeEvery(action.get, getEpisode);\n}\n","import { all } from 'redux-saga/effects';\nimport watchTVShow from '@/modules/Home/redux/saga';\nimport watchEpisode from '@/modules/Episode/redux/saga';\n\nexport default function* rootSaga() {\n  yield all([watchTVShow(), watchEpisode()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers.js';\nimport rootSagas from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === `development`) {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSagas);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Router from './router';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <Router />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}